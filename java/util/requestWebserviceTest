

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;

import org.codehaus.xfire.client.Client;

import com.jacob.activeX.ActiveXComponent;
import com.jacob.com.ComThread;
import com.jacob.com.Dispatch;
import com.risen.base.util.MyFileConvertUtils;
import com.risen.base.util.MyFileUtils;

import sun.misc.BASE64Decoder;
import sun.misc.BASE64Encoder;

public class requestWebserviceTest extends MyFileUtils {
	
	/** 
	 * 将文件转化为字节数组字符串，并对其进行Base64编码处理 
	 * @param imgFile 
	 * @return 
	 */  
	public static String GetImageStr(String imgFile) {  
		InputStream in = null;  
		byte[] data = null;  
		// 读取文件字节数组  
		try {  
			in = new FileInputStream(imgFile);  
			data = new byte[in.available()];  
			in.read(data);  
			in.close();  
		} catch (IOException e) {  
			e.printStackTrace();  
		}  
		// 对字节数组Base64编码  
		BASE64Encoder encoder = new BASE64Encoder();  
		// 返回Base64编码过的字节数组字符串  
		return encoder.encode(data);  
	}
	
	/**
	 * Description: 将base64编码内容转换为Pdf
	 * @param  base64编码内容，文件的存储路径（含文件名）
	 * @Author fuyuwei
	 * Create Date: 2015年7月30日 上午9:40:23
	 */
	public static void base64StringToPdf(String base64Content,String filePath){
		BASE64Decoder decoder = new BASE64Decoder();
		BufferedInputStream bis = null;
		FileOutputStream fos = null;
		BufferedOutputStream bos = null;

		try {
			byte[] bytes = decoder.decodeBuffer(base64Content);//base64编码内容转换为字节数组
			ByteArrayInputStream byteInputStream = new ByteArrayInputStream(bytes);
			bis = new BufferedInputStream(byteInputStream);
			File file = new File(filePath);
			File path = file.getParentFile();
			if(!path.exists()){
				path.mkdirs();
			}
			fos = new FileOutputStream(file);
			bos = new BufferedOutputStream(fos);

			byte[] buffer = new byte[1024];
			int length = bis.read(buffer);
			while(length != -1){
				bos.write(buffer, 0, length);
				length = bis.read(buffer);
			}
			bos.flush();
		} catch (Exception e) {
			e.printStackTrace();
		}finally{
			try {
				 if(bis!=null)
					 bis.close();
				 if(fos!=null)
					 fos.close();
				 if(bos!=null)
					 bos.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
			
		}
	}
	
	public static void word2pdfBySaveAs(String source, String target)
	  {
	    System.out.println("启动Word");
	    long start = System.currentTimeMillis();
	    ActiveXComponent app = null;
	    try {
	    	ComThread.InitSTA();
	      app = new ActiveXComponent("Word.Application");
	      app.setProperty("Visible", false);

	      Dispatch docs = app.getProperty("Documents").toDispatch();
	      System.out.println("打开文档" + source);
	      Dispatch doc = Dispatch.call(docs, 
	        "Open", new Object[] { 
	        source, 
	        Boolean.valueOf(false), 
	        Boolean.valueOf(true) })
	        .toDispatch();

	      System.out.println("转换文档到PDF " + target);
	      File tofile = new File(target);
	      if (tofile.exists()) {
	        tofile.delete();
	      }
	      Dispatch.call(doc, 
	        "SaveAs", new Object[] { 
	        target, 
	        Integer.valueOf(17) });

	      Dispatch.call(doc, "Close", new Object[] { Boolean.valueOf(false) });
	      long end = System.currentTimeMillis();
	      System.out.println("转换完成..用时：" + (end - start) + "ms.");
	    } catch (Exception e) {
	      System.out.println("========Error:文档转换失败：" + e.getMessage());
	      e.printStackTrace();
	    } finally {
	      if (app != null)
	        app.invoke("Quit", 0);
	      ComThread.Release();
	    }
	  }

	/**
	 * @Title requestWebserviceTest.java
	 * @auther gaoyang
	 * @Descrption 
	 * @DATE Sep 11, 2017 10:43:14 AM 
	 * @param args void 
	 * @throws Exception 
	 * @throws MalformedURLException 
	 */
	public static void main(String[] args){
		String wordFile = "e:\\disability.docx";
		//String pdfFile = "E:\\driver.pdf"; 
	//	word2pdfBySaveAs(wordFile, pdfFile);
		String base64Str = GetImageStr(wordFile);
		//System.out.println(base64Str);
		Client client;
		try {
			client = new Client(new URL("http://192.168.4.233:8080/risen/public/service/IAddSealService?wsdl"));
			Object[] results = client.invoke("addSeal", new Object[]{base64Str});
			base64StringToPdf((String)results[0], "e:\\disability123456.pdf");
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		


	}

}
