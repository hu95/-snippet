近期从事检索工作，需要相应用户的输入请求，返回结果。由于难以预料用户的输入内容，如果不加过滤处理，在检索阶段很可能抛出异常。
 
用户的输入可能风格迥异，最常见的可能算是夹杂各种标点符号的输入了。怎样过滤？
在csdn论坛上面看到一贴，综合了一下，得到了下面的正则表达式，也许会帮助你解决问题：

\\pP|\\pS

我们用一个例子演示此正则表达式用法：
public static void main(String[] args){

String
string="测试<>《》！*(^)$%~!@#$…&%￥—+=、。，；‘’“”：·`文本";


System.out.println(string.replaceAll("\\pP|\\pS", ""));

}

输出结果为：
测试文本
 
参考的主要内容如下：
 
Unicode 编码并不只是为某个字符简单定义了一个编码，而且还将其进行了归类。

/pP 其中的小写 p 是 property 的意思，表示 Unicode 属性，用于 Unicode 正表达式的前缀。

大写 P 表示 Unicode 字符集七个字符属性之一：标点字符。

其他六个是

L：字母；
M：标记符号（一般不会单独出现）；
Z：分隔符（比如空格、换行等）；
S：符号（比如数学符号、货币符号等）；
N：数字（比如阿拉伯数字、罗马数字等）；
C：其他字符

上面这七个是属性，七个属性下还有若干个子属性，用于更进一步地进行细分。

Java 中用于 Unicode 的正则表达式数据都是由 Unicode 组织提供的。

Unicode 正则表达式标准（可以找到所有的子属性）
http://www.unicode.org/reports/tr18/

各 Unicode 字符属性的定义，可以用一看看某个字符具有什么属性。
http://www.unicode.org/Public/UNIDATA/UnicodeData.txt

这个文本文档一行是一个字符，第一列是 Unicode 编码，第二列是字符名，第三列是 Unicode 属性，
以及其他一些字符信息。
